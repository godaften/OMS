@page "/"
@page "/reception"
@inject IViewLejereByNameUseCase ViewLejereByNameUseCase
@inject NavigationManager NavigationManager


<div class="text-center bg-image" style="
      background-image: url('Images/image2.jpg');
      height: 300px;
    ">

    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="text-white">
            <h1 class="mb-3">Velkommen til Business House</h1>
        </div>
    </div>
</div>
<div class="p-5">

    <div class="d-flex justify-content-center align-items-center">

        <h2 class="mb-3">Klik på virksomheden du vil besøge</h2>

    </div>

    <div class="container text-center mt-1">
        <div class="row">
            @foreach (var lejer in Lejere)
            {
                <div class="col-sm-4">
                    <button type="button"
                        class="btn btn-success mt-4 mb-4 h-75 w-75"
                        @onclick="@(() => SeLejer(lejer.LejerID))">
                        @lejer.Navn
                    </button>
                </div>

            }
        </div>
    </div>
</div>

@code {


    [Parameter]
    public List<Lejer> Lejere { get; set; } = new List<Lejer>();

    public void SeLejer(int lejerId)
    {
        NavigationManager.NavigateTo($"/lejer/{lejerId}");

    }

    [Parameter]
    public string SearchTerm { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        Lejere = (await ViewLejereByNameUseCase.ExecuteAsync(this.SearchTerm)).OrderBy((item) => item.Navn).ToList();
    }


}
